trigger:
- master
- stage

variables:
  azureServiceConnection: 'essencif.ai_resources'
  vmImageName: 'ubuntu-latest'
  dockerImageName: 'essencifai-backend'  # You can name it according to your project
  containerRegistry: 'essencifaibackendregistry.azurecr.io'  # Azure Container Registry URL

stages:
- stage: Build
  displayName: Build and Dockerize
  jobs:
  - job: BuildDockerImage
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        command: 'build'
        containerRegistry: '$(containerRegistry)'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: '$(Build.BuildId)'

    - task: Docker@2
      inputs:
        command: 'push'
        containerRegistry: '$(containerRegistry)'
        imageName: '$(dockerImageName)'
        tags: '$(Build.BuildId)'

- stage: DeployDevelopment
  displayName: 'Deploy Web App Development'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'essencifai-backend-development'
    AZURE_COMPILATION_ENV: 'development'

  jobs:
  - deployment: DevelopmentDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              imageName: $(containerRegistry)/$(dockerImageName):$(Build.BuildId)

- stage: DeployTesting
  displayName: 'Deploy Web App Testing'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'essencifai-backend-testing'
    AZURE_COMPILATION_ENV: 'testing'

  jobs:
  - deployment: TestingDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'testing'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              imageName: $(containerRegistry)/$(dockerImageName):$(Build.BuildId)

- stage: DeployProduction
  displayName: 'Deploy Web App Production'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'essencifai-backend-production'
    AZURE_COMPILATION_ENV: 'production'

  jobs:
  - deployment: ProductionDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              imageName: $(containerRegistry)/$(dockerImageName):$(Build.BuildId)