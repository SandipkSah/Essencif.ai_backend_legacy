# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
- stage


variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnection: 'essencif.ai_resources'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.12
  pythonVersion: '3.12'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python -m venv antenv
        source ./antenv/bin/activate
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
        excludePatterns: |
          **/.git/**

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop


- stage: DeployDevelopment
  displayName: 'Deploy Web App Development'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'essencifai-backend-development'
    AZURE_COMPILATION_ENV: 'development'

  jobs:
  - deployment: DevelopmentDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : essencifai-backend-development'
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip


- stage: DeployTesting
  displayName: 'Deploy Web App Testing'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'essencifai-backend-testing'
    AZURE_COMPILATION_ENV: 'testing'

  jobs:
  - deployment: TestingDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'testing'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : essencifai-backend-development'
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
      

- stage: DeployProduction
  displayName: 'Deploy Web App Production'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  variables:
    DEPLOYMENT_APP_SERVICE_CONTAINER: 'essencifai-backend-production'
    AZURE_COMPILATION_ENV: 'production'
    
  jobs:
  - deployment: ProductionDeploymentJob
    pool:
      vmImage: $(vmImageName)
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Use Python version'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : essencifai-backend-production'
            inputs:
              azureSubscription: $(azureServiceConnection)
              appName: $(DEPLOYMENT_APP_SERVICE_CONTAINER)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              